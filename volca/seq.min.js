var midiAccess=null,interval=null,notes=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"],scales=["Chromatic","Major","Minor"],scale={0:[0,1,2,3,4,5,6,7,8,9,10,11],1:[0,2,4,5,7,9,11],2:[0,2,3,5,7,8,10]},stepTime=0;function initMidi(){try{navigator.requestMIDIAccess().then(function(e){const t=(midiAccess=e).outputs,n=$("#midiout");0==t.size&&$("#error").text("Could not find any MIDI device.").show();for(let e of t.values())n.append(`<option value="${e.id}">${e.name}</option>`)},function(){$("#error").text("Could not access your MIDI devices.").show()})}catch(e){return $("#error").text("Could not access your MIDI devices, make sure you are using https://").show(),void console.log("error",e)}}function initMainSettings(){let e=$("#rootnote");notes.forEach((t,n)=>{e.append(`<option value="${n}">${t}</option>`)}),e.on("change",function(){let e=parseInt($("#mainscale option:selected").val());0!=e&&changeScale(e)});let t=$("#mainscale");scales.forEach((e,n)=>{t.append(`<option value="${n}">${e}</option>`)}),t.on("change",function(){changeScale(this.value)})}function initSteps(){console.log("init steps.");const e=$(".step");let t="";for(let e=0;e<7;e++)t+=1==e?`<option value="${e+2}" selected>${e}</option>`:`<option value="${e+2}">${e}</option>`;let n="";notes.forEach((e,t)=>{n+=`<option value="${t}">${e}</option>`}),e.map((e,o)=>{var a=$(`\n            <div id="step${e}">\n                <h4>${e+1}</h4>\n                <div class="note"> \n                    <label>note:</label><br/>\n                    <select id="note${e+1}" class="s_note">\n                    ${n}\n                    </select>\n                </div>\n\n                <div class="scale"> \n                    <label>scale:</label><br/>\n                    <select id="scale${e}">\n                    ${t}\n                    </select>\n                </div>\n\n                <div>\n                    <label>velocity:</label><br/>\n                    <input type="number" value="120" mix="0" max="127" id="velocity${e}" class="velocity" />\n                </div>\n            </div>\n        `);$(o).append(a)})}function start(){var e=0;const t=parseInt($("#mainBPM").val());stepTime=15e3/t,$(".start").hide(),$(".stop").show(),null==interval?interval=setInterval(()=>{highlightCurrentStep(e%16),playNote(e%16),e++},stepTime):console.warn("Already running...")}function stop(){clearInterval(interval),interval=null,$(".step").removeClass("play"),$(".start").show(),$(".stop").hide()}function highlightCurrentStep(e){let t=`step${e}`;$(".step").removeClass("play"),$(`#${t}`).parent().addClass("play")}function playNote(e){const t=parseInt($(`#step${e} option:selected`).val()),n=parseInt($(`#scale${e} option:selected`).val());sendNote(11*n+n+t,parseInt($(`#velocity${e}`).val()).toString(16))}function sendNote(e,t){if(midiAccess){const n=[144,e,`0x${t}`],o=$("#midiout option:selected").val(),a=midiAccess.outputs.get(o);a.send(n),a.send([128,e,64],window.performance.now()+stepTime-20)}}function changeScale(e){const t=parseInt($("#rootnote option:selected").val()),n=notes.slice(t,notes.length),o=notes.slice(0,t),a=n.concat(o);let i=[];scale[e]&&scale[e].forEach(e=>{let t=a[e],n=notes.indexOf(t);i.push(`<option value=${n}>${t}</option>`)});const l=$(".s_note");l.find("option").remove().end(),l.append(i.join(""))}function exportPattern(){console.log("export");let e={bpm:parseInt($("#mainBPM").val()),rootnote:parseInt($("#rootnote option:selected").val()),mainscale:parseInt($("#mainscale option:selected").val()),sequence:[]};for(let t=0;t<16;t++){let n=parseInt($(`#step${t} option:selected`).val()),o=parseInt($(`#scale${t} option:selected`).val());e.sequence.push({note:n,scale:o,velocity:parseInt($(`#velocity${t}`).val()),MIDINoteNumber:11*o+o+n,noteName:notes[n].toString()+(o-1).toString()})}download("pattern"+(new Date).getTime(),JSON.stringify(e))}function download(e,t){var n=document.createElement("a");n.setAttribute("href","data:application/json;charset=utf-8,"+encodeURIComponent(t)),n.setAttribute("download",e),n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}function loadPattern(e){const t=e.target.result;let n;try{n=JSON.parse(t),$("#mainBPM").val(n.bpm),$("#rootnote").val(n.rootnote),$("#mainscale").val(n.mainscale);for(let e=0;e<16;e++){let t=n.sequence[e];$(`#note${e}`).val(t.note),$(`#scale${e}`).val(t.scale),$(`#velocity${e}`).val(t.velocity)}}catch(e){return $("#error").text("Wrong file!").show(),void console.error(e)}}function importPattern(e){var t=e[0],n=new FileReader;n.addEventListener("load",loadPattern),n.readAsText(t)}$(document).ready(function(){$(".stop").hide(),initMidi(),initMainSettings(),initSteps()});